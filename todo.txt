ToDo: 
- Push cart to php, no localstorage cart
- Clean services (breadcrumbs and carts) to get rid of useless code
- Perform db optimization
- Account for all special cases
	- hardcopy vs softcopy price
	- classes and their recurring wierdness
	- ...
- migrate logic to a rest type structure
- re-design based on proposed user interaction tree
- store referrer for redirects back to site
- notify of empty cart on home page

- register user / select firm from list of firms
- register user / select address for a list of firm addresses

- GET SAMPLE DATA!
- Implement Form constraints for checkout
- photo upload field (doesn't store, just emails)
- send email on checkout (indicate payment type, send misc fields)
- apply time based settings to events

In a holding pattern:
- build administration section (see if user end is accepted)
	- Products
	- Items
	- Downloads
	- Groups
	- Discounts
	- Firms (merge)
	- Memberships
	- Purchases
	- ...

Notes:
- Add conference type product -> Force insert into tie_product_field

Questions:
- how old of a browser do we need to support
	- iff not old -> try this for array unique (php cart merge within index.php) http://stackoverflow.com/a/11247231
- remove duplicates on server or notify user of duplicates?

Future releases
- handle invoices
- use key based paypal checkout
- assign status to orders (processing, confirmed, etc)
- download proxy? to ensure files have been purchased? (php script)
- Previous purchases -> modify attendees to a conference, priced accordingly
- periodically make calls back to server to check for additions to php cart (wait for test domain)
- instead of so many dialogs for attendees, just list all employees with checkboxes (only a dialog for new employee)

Used partials:
- index.tpl.html
- custom-payment-form.tpl.html
- register-form.tpl.html
- modal-address.tpl.html

Not used partials:
- modal-options.tpl.html